{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1mihPydSWBpkiTakqnK5Myvu8swyfnzS3","authorship_tag":"ABX9TyPAfC8FQfsYlrcYnrZVAX53"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["#TASK -1 : Use classification technique for prediction of Graduate Admissions from an Indian perspective\n","\n","from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Fwu-nr7-nnRv","executionInfo":{"status":"ok","timestamp":1691826466903,"user_tz":-330,"elapsed":8122,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"fa046767-b368-484e-e76f-a17fbea466cb"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/drive; to attempt to forcibly remount, call drive.mount(\"/content/drive\", force_remount=True).\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","\n","data = pd.read_csv(\"/content/drive/MyDrive/INTERN TASK/admission_predict1.csv\")"],"metadata":{"id":"lS8_GrtAoqP9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"b4DbVGd5pO5x","executionInfo":{"status":"ok","timestamp":1691826476188,"user_tz":-330,"elapsed":500,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"a7db1f40-246a-48b8-efa5-5ce1c4a40454"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Serial _No  GRE_Score  TOEFL_Score  University_Rating  SOP  LOR   CGPA  \\\n","0           1        337          118                  4  4.5   4.5  9.65   \n","1           2        324          107                  4  4.0   4.5  8.87   \n","2           3        316          104                  3  3.0   3.5  8.00   \n","3           4        322          110                  3  3.5   2.5  8.67   \n","4           5        314          103                  2  2.0   3.0  8.21   \n","\n","   Research  Chance_of_Admit   \n","0         1              0.92  \n","1         1              0.76  \n","2         1              0.72  \n","3         1              0.80  \n","4         0              0.65  "],"text/html":["\n","\n","  <div id=\"df-3bc755c8-d096-4716-9445-1953c89ecb82\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Serial _No</th>\n","      <th>GRE_Score</th>\n","      <th>TOEFL_Score</th>\n","      <th>University_Rating</th>\n","      <th>SOP</th>\n","      <th>LOR</th>\n","      <th>CGPA</th>\n","      <th>Research</th>\n","      <th>Chance_of_Admit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>337</td>\n","      <td>118</td>\n","      <td>4</td>\n","      <td>4.5</td>\n","      <td>4.5</td>\n","      <td>9.65</td>\n","      <td>1</td>\n","      <td>0.92</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>324</td>\n","      <td>107</td>\n","      <td>4</td>\n","      <td>4.0</td>\n","      <td>4.5</td>\n","      <td>8.87</td>\n","      <td>1</td>\n","      <td>0.76</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>316</td>\n","      <td>104</td>\n","      <td>3</td>\n","      <td>3.0</td>\n","      <td>3.5</td>\n","      <td>8.00</td>\n","      <td>1</td>\n","      <td>0.72</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>322</td>\n","      <td>110</td>\n","      <td>3</td>\n","      <td>3.5</td>\n","      <td>2.5</td>\n","      <td>8.67</td>\n","      <td>1</td>\n","      <td>0.80</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>314</td>\n","      <td>103</td>\n","      <td>2</td>\n","      <td>2.0</td>\n","      <td>3.0</td>\n","      <td>8.21</td>\n","      <td>0</td>\n","      <td>0.65</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3bc755c8-d096-4716-9445-1953c89ecb82')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-33f6ea6c-3c03-4bf8-b874-bddf4d96b691\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-33f6ea6c-3c03-4bf8-b874-bddf4d96b691')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-33f6ea6c-3c03-4bf8-b874-bddf4d96b691 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-3bc755c8-d096-4716-9445-1953c89ecb82 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-3bc755c8-d096-4716-9445-1953c89ecb82');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"1AUbCCg5rMni","executionInfo":{"status":"ok","timestamp":1691826479083,"user_tz":-330,"elapsed":600,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"f3d80012-0168-4f44-c7e0-799985c549e0"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 400 entries, 0 to 399\n","Data columns (total 9 columns):\n"," #   Column             Non-Null Count  Dtype  \n","---  ------             --------------  -----  \n"," 0   Serial _No         400 non-null    int64  \n"," 1   GRE_Score          400 non-null    int64  \n"," 2   TOEFL_Score        400 non-null    int64  \n"," 3   University_Rating  400 non-null    int64  \n"," 4   SOP                400 non-null    float64\n"," 5   LOR                400 non-null    float64\n"," 6   CGPA               400 non-null    float64\n"," 7   Research           400 non-null    int64  \n"," 8   Chance_of_Admit    400 non-null    float64\n","dtypes: float64(4), int64(5)\n","memory usage: 28.2 KB\n"]}]},{"cell_type":"code","source":["data.describe()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"eYhw2apSrkw6","executionInfo":{"status":"ok","timestamp":1691826483602,"user_tz":-330,"elapsed":435,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"7d2e554f-9dc1-4c81-8100-1088efa22425"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Serial _No   GRE_Score  TOEFL_Score  University_Rating         SOP  \\\n","count  400.000000  400.000000   400.000000         400.000000  400.000000   \n","mean   200.500000  316.807500   107.410000           3.087500    3.400000   \n","std    115.614301   11.473646     6.069514           1.143728    1.006869   \n","min      1.000000  290.000000    92.000000           1.000000    1.000000   \n","25%    100.750000  308.000000   103.000000           2.000000    2.500000   \n","50%    200.500000  317.000000   107.000000           3.000000    3.500000   \n","75%    300.250000  325.000000   112.000000           4.000000    4.000000   \n","max    400.000000  340.000000   120.000000           5.000000    5.000000   \n","\n","             LOR         CGPA    Research  Chance_of_Admit   \n","count  400.000000  400.000000  400.000000        400.000000  \n","mean     3.452500    8.598925    0.547500          0.724350  \n","std      0.898478    0.596317    0.498362          0.142609  \n","min      1.000000    6.800000    0.000000          0.340000  \n","25%      3.000000    8.170000    0.000000          0.640000  \n","50%      3.500000    8.610000    1.000000          0.730000  \n","75%      4.000000    9.062500    1.000000          0.830000  \n","max      5.000000    9.920000    1.000000          0.970000  "],"text/html":["\n","\n","  <div id=\"df-431e01bd-dad6-4e63-9d27-2da511b0bd7a\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Serial _No</th>\n","      <th>GRE_Score</th>\n","      <th>TOEFL_Score</th>\n","      <th>University_Rating</th>\n","      <th>SOP</th>\n","      <th>LOR</th>\n","      <th>CGPA</th>\n","      <th>Research</th>\n","      <th>Chance_of_Admit</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","      <td>400.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>200.500000</td>\n","      <td>316.807500</td>\n","      <td>107.410000</td>\n","      <td>3.087500</td>\n","      <td>3.400000</td>\n","      <td>3.452500</td>\n","      <td>8.598925</td>\n","      <td>0.547500</td>\n","      <td>0.724350</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>115.614301</td>\n","      <td>11.473646</td>\n","      <td>6.069514</td>\n","      <td>1.143728</td>\n","      <td>1.006869</td>\n","      <td>0.898478</td>\n","      <td>0.596317</td>\n","      <td>0.498362</td>\n","      <td>0.142609</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>290.000000</td>\n","      <td>92.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>6.800000</td>\n","      <td>0.000000</td>\n","      <td>0.340000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>100.750000</td>\n","      <td>308.000000</td>\n","      <td>103.000000</td>\n","      <td>2.000000</td>\n","      <td>2.500000</td>\n","      <td>3.000000</td>\n","      <td>8.170000</td>\n","      <td>0.000000</td>\n","      <td>0.640000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>200.500000</td>\n","      <td>317.000000</td>\n","      <td>107.000000</td>\n","      <td>3.000000</td>\n","      <td>3.500000</td>\n","      <td>3.500000</td>\n","      <td>8.610000</td>\n","      <td>1.000000</td>\n","      <td>0.730000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>300.250000</td>\n","      <td>325.000000</td>\n","      <td>112.000000</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>4.000000</td>\n","      <td>9.062500</td>\n","      <td>1.000000</td>\n","      <td>0.830000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>400.000000</td>\n","      <td>340.000000</td>\n","      <td>120.000000</td>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","      <td>5.000000</td>\n","      <td>9.920000</td>\n","      <td>1.000000</td>\n","      <td>0.970000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-431e01bd-dad6-4e63-9d27-2da511b0bd7a')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-aa78b48d-538a-4e39-83d1-e74b229f782b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-aa78b48d-538a-4e39-83d1-e74b229f782b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-aa78b48d-538a-4e39-83d1-e74b229f782b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-431e01bd-dad6-4e63-9d27-2da511b0bd7a button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-431e01bd-dad6-4e63-9d27-2da511b0bd7a');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["data = data.dropna()  # Drop rows with missing values\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":287},"id":"vz-U91LGr9lW","executionInfo":{"status":"ok","timestamp":1691827077402,"user_tz":-330,"elapsed":537,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"62ed4e68-e184-48bc-92a1-ce4ba399fb8f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   Serial _No  GRE_Score  TOEFL_Score  LOR   CGPA  Chance_of_Admit   \\\n","0           1        337          118   4.5  9.65              0.92   \n","1           2        324          107   4.5  8.87              0.76   \n","2           3        316          104   3.5  8.00              0.72   \n","3           4        322          110   2.5  8.67              0.80   \n","4           5        314          103   3.0  8.21              0.65   \n","\n","   University_Rating_2  University_Rating_3  University_Rating_4  \\\n","0                    0                    0                    1   \n","1                    0                    0                    1   \n","2                    0                    1                    0   \n","3                    0                    1                    0   \n","4                    1                    0                    0   \n","\n","   University_Rating_5  SOP_1.5  SOP_2.0  SOP_2.5  SOP_3.0  SOP_3.5  SOP_4.0  \\\n","0                    0        0        0        0        0        0        0   \n","1                    0        0        0        0        0        0        1   \n","2                    0        0        0        0        1        0        0   \n","3                    0        0        0        0        0        1        0   \n","4                    0        0        1        0        0        0        0   \n","\n","   SOP_4.5  SOP_5.0  Research_1  \n","0        1        0           1  \n","1        0        0           1  \n","2        0        0           1  \n","3        0        0           1  \n","4        0        0           0  "],"text/html":["\n","\n","  <div id=\"df-b3169329-8f55-4b30-bb5d-6969b8a34a7c\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Serial _No</th>\n","      <th>GRE_Score</th>\n","      <th>TOEFL_Score</th>\n","      <th>LOR</th>\n","      <th>CGPA</th>\n","      <th>Chance_of_Admit</th>\n","      <th>University_Rating_2</th>\n","      <th>University_Rating_3</th>\n","      <th>University_Rating_4</th>\n","      <th>University_Rating_5</th>\n","      <th>SOP_1.5</th>\n","      <th>SOP_2.0</th>\n","      <th>SOP_2.5</th>\n","      <th>SOP_3.0</th>\n","      <th>SOP_3.5</th>\n","      <th>SOP_4.0</th>\n","      <th>SOP_4.5</th>\n","      <th>SOP_5.0</th>\n","      <th>Research_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>337</td>\n","      <td>118</td>\n","      <td>4.5</td>\n","      <td>9.65</td>\n","      <td>0.92</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>324</td>\n","      <td>107</td>\n","      <td>4.5</td>\n","      <td>8.87</td>\n","      <td>0.76</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>316</td>\n","      <td>104</td>\n","      <td>3.5</td>\n","      <td>8.00</td>\n","      <td>0.72</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>322</td>\n","      <td>110</td>\n","      <td>2.5</td>\n","      <td>8.67</td>\n","      <td>0.80</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>314</td>\n","      <td>103</td>\n","      <td>3.0</td>\n","      <td>8.21</td>\n","      <td>0.65</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b3169329-8f55-4b30-bb5d-6969b8a34a7c')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2d75c15c-6605-4c44-9637-f4f9ec832187\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d75c15c-6605-4c44-9637-f4f9ec832187')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2d75c15c-6605-4c44-9637-f4f9ec832187 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b3169329-8f55-4b30-bb5d-6969b8a34a7c button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b3169329-8f55-4b30-bb5d-6969b8a34a7c');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["#feature selection"],"metadata":{"id":"v6Zbpr1swYWU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["X = data.drop(['Serial _No', 'Chance_of_Admit '], axis=1)  # Features\n","y = data['Chance_of_Admit ']  # Target variable"],"metadata":{"id":"V5l0TNTPvrUR"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Data splitting\n","\n","from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"N8QZpTeIwt-o"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#Model Selection and Training:\n","\n","from sklearn.ensemble import RandomForestRegressor\n","\n","model = RandomForestRegressor(n_estimators=100, random_state=42)\n","model.fit(X_train, y_train)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"PVhxoIkFw_Vl","executionInfo":{"status":"ok","timestamp":1691827445235,"user_tz":-330,"elapsed":453,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"a39703ec-7335-46b2-e980-c6d9cae4ebfe"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["RandomForestRegressor(random_state=42)"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>RandomForestRegressor(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">RandomForestRegressor</label><div class=\"sk-toggleable__content\"><pre>RandomForestRegressor(random_state=42)</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["from sklearn.metrics import mean_absolute_error\n","\n","y_pred = model.predict(X_test)\n","mae = mean_absolute_error(y_test, y_pred)\n","print(\"Mean Absolute Error:\", mae)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"OQ4FFQVuxrbz","executionInfo":{"status":"ok","timestamp":1691827490359,"user_tz":-330,"elapsed":415,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"154e6afe-a93c-4482-87cb-35539f5e6394"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error: 0.049451250000000044\n"]}]},{"cell_type":"code","source":["feature_importances = model.feature_importances_\n","feature_names = X.columns\n","\n","for feature_name, importance in zip(feature_names, feature_importances):\n","    print(f\"{feature_name}: {importance}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"WaxXlyz5x_qN","executionInfo":{"status":"ok","timestamp":1691827573180,"user_tz":-330,"elapsed":424,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"68adfac2-b743-4ced-8a50-887ac74836b6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["GRE_Score: 0.13685423768173266\n","TOEFL_Score: 0.03941631201855136\n","LOR : 0.02587128052818109\n","CGPA: 0.7294091838912494\n","University_Rating_2: 0.005784762845763378\n","University_Rating_3: 0.004215814711734524\n","University_Rating_4: 0.0032967530463437105\n","University_Rating_5: 0.00272238087574035\n","SOP_1.5: 0.003908933491793097\n","SOP_2.0: 0.006002838282836204\n","SOP_2.5: 0.007246557126592077\n","SOP_3.0: 0.004485365110969243\n","SOP_3.5: 0.004663432727575351\n","SOP_4.0: 0.009734072967720796\n","SOP_4.5: 0.0016528403950518795\n","SOP_5.0: 0.00046148534009417806\n","Research_1: 0.01427374895807082\n"]}]},{"cell_type":"code","source":["# Assuming you have already trained the model and split the data into X_test and y_test\n","\n","# Make predictions using the trained model\n","y_pred = model.predict(X_test)\n","\n","# Now you can compare the predicted values (y_pred) with the actual values (y_test)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ycrd6pfYyXn1","executionInfo":{"status":"ok","timestamp":1691827687654,"user_tz":-330,"elapsed":1770,"user":{"displayName":"libina salas","userId":"00943028746980487033"}},"outputId":"0bede046-250d-4aa1-ab03-a5994f1bfe2d"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0.6611, 0.7161, 0.9402, 0.8181, 0.5645, 0.9183, 0.5706, 0.4565,\n","       0.6731, 0.9051, 0.7266, 0.9415, 0.5461, 0.8976, 0.7152, 0.6679,\n","       0.7009, 0.511 , 0.7119, 0.9609, 0.6218, 0.6842, 0.7079, 0.5414,\n","       0.9433, 0.8149, 0.7378, 0.5736, 0.7072, 0.798 , 0.7934, 0.942 ,\n","       0.6412, 0.4743, 0.7072, 0.6597, 0.7021, 0.6853, 0.6395, 0.9254,\n","       0.7518, 0.6282, 0.7449, 0.948 , 0.8778, 0.8388, 0.9641, 0.65  ,\n","       0.9348, 0.8915, 0.9106, 0.703 , 0.764 , 0.944 , 0.5577, 0.5668,\n","       0.6953, 0.843 , 0.547 , 0.8757, 0.6367, 0.6404, 0.6692, 0.4508,\n","       0.6781, 0.6463, 0.593 , 0.8509, 0.8828, 0.7642, 0.6827, 0.8299,\n","       0.9229, 0.865 , 0.5305, 0.7444, 0.6959, 0.5247, 0.8443, 0.7706])"]},"metadata":{},"execution_count":42}]}]}